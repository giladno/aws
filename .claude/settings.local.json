{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(grep:*)",
      "Bash(terraform:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(aws cloudfront get-distribution:*)",
      "Bash(aws apigatewayv2 get-api:*)",
      "Bash(aws apigatewayv2 get-routes:*)",
      "Bash(curl:*)",
      "Bash(aws lambda get-function:*)",
      "Bash(aws lambda invoke:*)",
      "Bash(cat:*)",
      "Bash(aws cloudfront create-invalidation:*)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws logs get-log-events:*)",
      "Bash(aws secretsmanager list-secrets:*)",
      "Bash(aws ec2 describe-instances:*)",
      "Bash(aws ec2 describe-key-pairs:*)",
      "Bash(ssh:*)",
      "Bash(aws secretsmanager get-secret-value:*)",
      "Bash(aws rds describe-db-instances:*)",
      "Bash(aws ec2 describe-vpc-endpoints:*)",
      "Bash(aws lambda list-functions:*)",
      "Bash(aws rds describe-db-clusters:*)",
      "Bash(npm run:*)",
      "Bash(aws secretsmanager put-secret-value:*)",
      "Bash(aws ec2:*)",
      "Bash(aws rds:*)",
      "Bash(aws route53 list-resource-record-sets:*)",
      "Bash(aws route53:*)",
      "Bash(aws lambda update-function-configuration:*)",
      "Bash(aws lambda update-function-code:*)",
      "Bash(aws secretsmanager update-secret:*)",
      "Bash(cp:*)",
      "Bash(zip:*)",
      "Bash(aws lambda get-layer-version:*)",
      "Bash(unzip:*)",
      "Bash(aws lambda create-function:*)",
      "Bash(aws lambda delete-function:*)",
      "Bash(chmod:*)",
      "Bash(aws lambda publish-layer-version:*)",
      "Bash(aws iam attach-role-policy:*)",
      "Bash(aws lambda list-layer-versions:*)",
      "Bash(true)",
      "Bash(for version in 8 7 6 5 4 3)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(aws lambda delete-layer-version:*)",
      "Bash(done)",
      "Bash(aws s3 ls:*)",
      "Bash(aws s3api get-bucket-policy:*)",
      "Bash(aws s3api get-public-access-block:*)",
      "Bash(aws cloudfront get-origin-access-control:*)",
      "Bash(aws s3api head-object:*)",
      "Bash(aws s3api put-bucket-policy:*)",
      "Bash(aws cloudfront list-distributions:*)",
      "Bash(aws cloudfront create-origin-access-control:*)",
      "Bash(aws cloudfront delete-origin-access-control:*)",
      "Bash(aws s3api get-object-acl:*)",
      "Bash(aws s3api get-bucket-ownership-controls:*)",
      "Bash(aws s3api get-bucket-location:*)",
      "Bash(aws cloudfront update-distribution:*)",
      "Bash(aws s3api get-bucket-encryption:*)",
      "Bash(aws s3api put-bucket-encryption:*)",
      "Bash(aws s3 sync:*)",
      "Bash(aws s3 rm:*)",
      "Bash(aws kms put-key-policy:*)",
      "Bash(aws s3 cp:*)",
      "Bash(aws cloudfront get-invalidation:*)",
      "Bash(aws s3api delete-bucket-encryption:*)",
      "Bash(aws kms get-key-policy:*)",
      "Bash(aws s3api put-object:*)",
      "Bash(aws cloudfront:*)",
      "Bash(aws apigatewayv2 get-stages:*)",
      "Bash(aws apigatewayv2 get-domain-names:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws apigatewayv2 update-api-mapping:*)",
      "Bash(aws apigatewayv2 create-stage:*)",
      "Bash(aws apigatewayv2 delete-stage:*)",
      "Bash(aws apigatewayv2 delete-api-mapping:*)",
      "Bash(touch:*)",
      "Bash(aws ecs describe-services:*)",
      "Bash(aws ecs list-tasks:*)",
      "Bash(aws ecs describe-tasks:*)",
      "Bash(aws ecs describe-task-definition:*)",
      "Bash(aws ecr list-images:*)",
      "Bash(aws ecs update-service:*)",
      "Bash(aws ecs list-clusters:*)",
      "Bash(aws ecs register-task-definition:*)",
      "Bash(docker manifest inspect:*)",
      "Bash(docker run:*)",
      "Bash(aws iam list-attached-role-policies:*)",
      "Bash(aws iam list-role-policies:*)",
      "Bash(aws iam get-role-policy:*)",
      "Bash(docker pull:*)",
      "Bash(docker search:*)",
      "Bash(aws ecs list-task-definitions:*)",
      "Bash(scp:*)",
      "Bash(aws logs tail:*)",
      "Bash(aws ecs execute-command:*)",
      "Bash(aws efs describe-file-systems:*)",
      "Bash(aws efs describe-access-points:*)",
      "Bash(aws ecs describe-clusters:*)",
      "Bash(aws efs describe-mount-targets:*)",
      "Bash(aws efs modify-mount-target-security-groups:*)",
      "Bash(aws ecs list-services:*)",
      "Bash(docker tag:*)",
      "Bash(docker push:*)",
      "Bash(docker logs:*)",
      "Bash(-v /tmp/litellm-config:/config:ro )",
      "Bash(ghcr.io/berriai/litellm:main-latest )",
      "Bash(-v /tmp/litellm-config:/config:ro )",
      "Bash(--entrypoint ls )",
      "Bash(ghcr.io/berriai/litellm:main-latest )",
      "Bash(-la /config/)",
      "Bash(aws secretsmanager get-secret-value --secret-id \"ask-teddi-litellm\" --region il-central-1 --query SecretString --output text)",
      "Bash(aws secretsmanager describe-secret:*)",
      "Bash(timeout 10 docker run --rm -p 4000:4000 ghcr.io/berriai/litellm:main-latest --port 4000)",
      "Bash(/tmp/test-litellm.sh:*)",
      "Bash(aws elbv2 modify-load-balancer-attributes:*)",
      "Bash(aws secretsmanager get-secret-value --secret-id ask-teddi-litellm --region il-central-1 --query 'SecretString' --output text)",
      "Bash(aws elbv2 describe-load-balancers:*)",
      "Bash(docker inspect:*)",
      "Bash(aws ssm start-session:*)"
    ],
    "deny": []
  }
}